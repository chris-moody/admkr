/*!
 * VERSION: 1.0.2
 * DATE: 2018-03-03
 * UPDATES AND DOCS AT: https://chris-moody.github.io/mkr
 *
 * @license copyright 2017-2018 Christopher C. Moody
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy of
 *  this software and associated documentation files (the "Software"), to deal in the
 *  Software without restriction, including without limitation the rights to use, copy,
 *  modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
 *  and to permit persons to whom the Software is furnished to do so, subject to the
 *  following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 *  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 *  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 * @author: Christopher C. Moody, chris@moodydigital.com
 */
!function(global){function clp(options){_count++;var id=this._id=(options=options||{}).id||"clp-"+_count;this._parent=mkr.setDefault(options,"parent",mkr.default(mkr.query("svg"),mkr.create("svg",{css:{overflow:"visible"}}))),(d="string"==typeof this._parent?mkr.query(this._parent):this._parent)instanceof SVGElement||(this._parent=mkr.query("svg",d)||mkr.create("svg",{css:{overflow:"visible"}},this._parent)),mkr.setDefault(options,"attr",{}),mkr.setDefault(options.attr,"id",id),mkr.setDefault(options,"css",{});for(var clips=mkr.default(options.clips,[]),targets=mkr.default(options.targets,[]),d=this._defs=mkr.query("defs",this._parent)||mkr.create("defs",{},this._parent),i=(this._clip=mkr.create("clipPath",{attr:options.attr,css:options.css},d),0);i<clips.length;i++){var c=clips[i];c.length<1&&c.push("rect"),c.length<2&&c.push({}),this.create(c[0],c[1])}for(i=0;i<targets.length;i++){var target=targets[i];target.length<1&&target.push("div"),target.length<2&&target.push({}),this.createTarget(target[0],target[1])}_instances[id]=this}var _instances={},_count=-1;clp.prototype={get el(){return this._clip},get id(){return this.el.id},get parent(){return this.defs.parentNode},get defs(){return this._defs},get url(){return'url("#'+this.id+'")'},get clips(){return mkr.queryAll("*",this.el)},construct:function(type,options,index){return options.parent=this.el,mkr.construct(type,options)},create:function(type,options,index){return mkr.create(type,options,this.el,index)},add:function(target,index){return mkr.add(target,this.el,index)},remove:function(index){return(index=mkr.default(index,-1))<0&&(index=this.clips.length+index),mkr.remove(this.clips[index])},get:function(index){return(index=mkr.default(index,-1))<0&&(index=this.clips.length+index),this.clips[index]},set:function(options,clip){(clip=mkr.default(clip,-1))<0&&(clip=this.clips.length+clip);clip=this.get(clip);return TweenMax.set(clip,options),clip},constructTarget:function(type,options,index){return(options=options||{}).parent=this.parent,mkr.setDefault(options,"css",{}),options.css.clipPath=this.url,mkr.construct(type,options)},createTarget:function(type,options,index){return options=options||{},mkr.setDefault(options,"css",{}),options.css.clipPath=this.url,mkr.create(type,options,this.parent,index)},assign:function(targets,options,add,index){options=options||{},mkr.setDefault(options,"css",{}),options.css.clipPath=this.url;var t=[];return add=mkr.default(add,!1),mkr.each(targets,function(el){add&&mkr.add(el,this.parent,index),TweenMax.set(el,options),t.push(el)},this),t},unassign:function(targets,remove){remove=mkr.default(remove,!1);var t=[];return mkr.each(targets,function(el){TweenMax.set(el,{clearProps:"clipPath"}),remove&&mkr.remove(el),t.push(el)}),t}},clp.getInstance=function(id){return _instances[id]},clp.getElInstance=function(el){return _instances[el.id]},Object.defineProperty(clp,"VERSION",{get:function(){return"1.0.2"}}),"function"==typeof define&&define.amd?define(function(){return clp}):"undefined"!=typeof module&&module.exports?module.exports=clp:global.clp=clp}(mkr._constructs);